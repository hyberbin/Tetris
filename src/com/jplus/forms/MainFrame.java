/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MainFrame.java
 *
 * Created on 2012-5-15, 22:36:27
 */
package com.jplus.forms;

import com.jplus.action.AIStrategy;
import com.jplus.action.BaseGraphic;
import com.jplus.bean.SquareBean;
import com.jplus.bean.SquarePool;
import java.awt.*;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author hyberbin
 */
public class MainFrame extends javax.swing.JFrame implements Runnable {

    /** 当前画图器 */
    public static BaseGraphic painter = new BaseGraphic(BaseGraphic.MAIN);
    /** 下一个方块画图器 */
    public static BaseGraphic nextPainter = new BaseGraphic(BaseGraphic.NEXT);
    /** 记录画面状态 */
    public static LinkedList<Boolean[]> bools;
    /** 当前的方块 */
    public static SquareBean current;
    /** 下一个方块 */
    public static SquareBean nextSquare;
    /** 游戏是否结束 */
    public static boolean isGameOver;
    /** 当前得分 */
    public static int score;
    /** 是否托管 */
    public static boolean isCustody=true;


    /** Creates new form MainFrame */
    public MainFrame() {
        initComponents();
        painter.setBackground(Color.WHITE);
        painter.setBounds(10, 20, Main.sizeY * 20, Main.sizeX * 20);
        jPanel1.add(painter);
        //setResizable(false);
        ini();
        nextPainter.setBackground(Color.WHITE);
        nextPainter.setBounds(0, 0, 4 * 20, 4 * 20);
        next.add(nextPainter);
        KeyboardFocusManager.getCurrentKeyboardFocusManager().
                addKeyEventPostProcessor(
                new KeyEventPostProcessor() {

                    @Override
                    public boolean postProcessKeyEvent(KeyEvent e) {
                        if (current != null) {
                            if (e.getKeyCode() == KeyEvent.VK_UP && e.getID() == KeyEvent.KEY_RELEASED) {
                                current.rotation();
                            } else if (e.getKeyCode() == KeyEvent.VK_LEFT && e.getID() == KeyEvent.KEY_PRESSED) {
                                current.left();
                            } else if (e.getKeyCode() == KeyEvent.VK_RIGHT && e.getID() == KeyEvent.KEY_PRESSED) {
                                current.right();
                            } else if (e.getKeyCode() == KeyEvent.VK_DOWN && e.getID() == KeyEvent.KEY_PRESSED) {
                                current.drop();
                            }
                        }
                        return false;
                    }
                });
        pause.setEnabled(false);
        Toolkit tk = Toolkit.getDefaultToolkit();
        setLocation((tk.getScreenSize().width - getSize().width) / 2,
                (tk.getScreenSize().height - getSize().height) / 2);
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        this.setTitle("俄罗斯方块（Hyberbin制作）");
        this.addWindowListener(new WindowAdapter() {

            @Override
            public void windowClosing(WindowEvent event) {
                if (JOptionPane.showConfirmDialog(null, "确认退出？") == 0) {
                    dispose();
                    System.exit(0);
                }
            }
        });
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        start = new javax.swing.JButton();
        replay = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        scoreLable = new javax.swing.JLabel();
        faster = new javax.swing.JButton();
        pause = new javax.swing.JButton();
        next = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        custodyButton = new javax.swing.JButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("操作区"));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 309, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("游戏状态"));

        start.setText("开始");
        start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startActionPerformed(evt);
            }
        });

        replay.setText("重玩");
        replay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                replayActionPerformed(evt);
            }
        });

        jLabel1.setText("当前得分：");

        scoreLable.setText("0分");

        faster.setText("加速");
        faster.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fasterActionPerformed(evt);
            }
        });

        pause.setText("暂停");
        pause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pauseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout nextLayout = new javax.swing.GroupLayout(next);
        next.setLayout(nextLayout);
        nextLayout.setHorizontalGroup(
            nextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        nextLayout.setVerticalGroup(
            nextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jLabel2.setText("下一个：");

        custodyButton.setText("托管");
        custodyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                custodyButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(scoreLable))
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(replay)
                            .addComponent(faster)
                            .addComponent(start)
                            .addComponent(pause)
                            .addComponent(next, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(custodyButton))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(scoreLable)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(16, 16, 16)
                .addComponent(next, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pause)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(faster)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(start)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(custodyButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(replay)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startActionPerformed
        if (!SquareBean.isLive) {
            Thread th = new Thread(this);
            th.start();
        }
        pause.setEnabled(true);
        start.setEnabled(false);
        current.isPause = false;
    }//GEN-LAST:event_startActionPerformed

    private void replayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_replayActionPerformed
        ini();
        pause.setEnabled(true);
        start.setEnabled(false);
        painter.clear();
    }//GEN-LAST:event_replayActionPerformed

    private void fasterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fasterActionPerformed
        SquareBean.sleep -= 200;
        if (SquareBean.sleep <= 100) {
            SquareBean.sleep = 100;
        }
    }//GEN-LAST:event_fasterActionPerformed

    private void pauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pauseActionPerformed
        current.isPause = true;
        pause.setEnabled(false);
        start.setEnabled(true);
    }//GEN-LAST:event_pauseActionPerformed

    private void custodyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_custodyButtonActionPerformed
       isCustody=!isCustody;
       if(isCustody){
           custodyButton.setText("接手");
       }else{
           custodyButton.setText("托管");
       }
    }//GEN-LAST:event_custodyButtonActionPerformed
    /** *
     * 初始化
     */
    private void ini() {
        score = 0;
        SquareBean.isLive = false;
        isGameOver = false;
        nextSquare = SquarePool.getOne();
        //nextSquare = SquarePool.getSquare(1);
        scoreLable.setText("0分");
        bools = new LinkedList<Boolean[]>();
        for (int x = 0; x < Main.sizeX; x++) {
            Boolean[] bool = new Boolean[Main.sizeY];
            for (int y = 0; y < Main.sizeY; y++) {
                bool[y] = false;
            }
            bools.add(bool);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton custodyButton;
    private javax.swing.JButton faster;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel next;
    private javax.swing.JButton pause;
    private javax.swing.JButton replay;
    public static javax.swing.JLabel scoreLable;
    private javax.swing.JButton start;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        while (true) {
            if (isGameOver) {
                if (JOptionPane.showConfirmDialog(null, "游戏结束是否退出？") == 0) {
                    dispose();
                    System.exit(0);
                }
                isGameOver = false;
                replayActionPerformed(null);
            }
            if (!SquareBean.isLive) {
                current = nextSquare;
                nextSquare = SquarePool.getOne();
                if(!isCustody)current.start();
                if(isCustody)new AIStrategy(current.type).start();
                nextPainter.drawNext();
            }
            if(score>10000)replayActionPerformed(null);
            try {
                Thread.sleep(50);
            } catch (InterruptedException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
}
